[tool.poetry]
name = "target-mysql"
version = "0.0.1"
description = "`target-mysql` is a Singer target for MySQL, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["AutoIDM"]
keywords = [
    "ELT",
    "MySQL",
]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = "<3.12,>=3.8.1"
singer-sdk = { version="^0.30.0" }
mysqlclient = "^2.2.0"
sqlalchemy = "<2"
fs-s3fs = { version = "^1.1.1", optional = true }

[tool.poetry.dev-dependencies]
pytest = "^7.3.2"
tox = "^3.24.4"
flake8 = "^5.0.4"
flake8-docstrings = "^1.7.0"
black = "23.1.0"
mypy = "^1.0"
isort = "^5.11.5"
remote-pdb="2.1.0"

[tool.isort]
profile = "black"
multi_line_output = 3 # Vertical Hanging Indent
src_paths = "target_postgres"

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.ruff]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "TD002",  # Missing author in TOD
    "TD003",  # Missing issue link on the line following this TODO
    "FIX002",  # Line contains TODO, consider resolving the issue
    "FBT001",  # Boolean positional arg in function definition
    "FBT002",  # Boolean default value in function definition
]
select = ["ALL"]
src = ["target_mysql"]
target-version = "py37"

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.isort]
known-first-party = ["target_mysql"]

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
target-mysql = 'target_mysql.target:TargetMySQL.cli'
